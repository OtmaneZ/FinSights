'use client'

import { useState } from 'react'

interface Message {
    id: string
    content: string
    isUser: boolean
    timestamp: Date
}

export default function AICopilot() {
    const [messages, setMessages] = useState<Message[]>([
        {
            id: '1',
            content: 'Bonjour ! Je suis votre copilote FinSight. Posez-moi des questions sur vos finances en langage naturel.',
            isUser: false,
            timestamp: new Date()
        }
    ])
    const [input, setInput] = useState('')
    const [isLoading, setIsLoading] = useState(false)

    const handleSend = async () => {
        if (!input.trim()) return

        const userMessage: Message = {
            id: Date.now().toString(),
            content: input,
            isUser: true,
            timestamp: new Date()
        }

        setMessages(prev => [...prev, userMessage])
        setInput('')
        setIsLoading(true)

        // Simulate AI response
        setTimeout(() => {
            const aiResponse: Message = {
                id: (Date.now() + 1).toString(),
                content: generateMockResponse(input),
                isUser: false,
                timestamp: new Date()
            }
            setMessages(prev => [...prev, aiResponse])
            setIsLoading(false)
        }, 2000)
    }

    const generateMockResponse = (query: string): string => {
        const lowerQuery = query.toLowerCase()

        if (lowerQuery.includes('tr√©sorerie') || lowerQuery.includes('cash')) {
            return `üí∞ Votre position de tr√©sorerie actuelle est de 245 000‚Ç¨. La projection √† 30 jours montre 198 000‚Ç¨ (-19%), principalement due aux √©ch√©ances fournisseurs du 15 novembre (85k‚Ç¨). Je recommande de n√©gocier un √©chelonnement avec le fournisseur principal ou d'acc√©l√©rer l'encaissement des factures en cours (125k‚Ç¨ disponibles).`
        }

        if (lowerQuery.includes('marge') || lowerQuery.includes('rentabilit√©')) {
            return `üìä Votre marge brute s'√©tablit √† 42.8% ce mois-ci, en baisse de 2.3 points vs septembre. Cette d√©gradation s'explique par l'augmentation des co√ªts mati√®res premi√®res (+8%) et un mix produit d√©favorable. Les lignes "Premium" maintiennent 65% de marge. Actions sugg√©r√©es : r√©viser les prix ou optimiser les achats.`
        }

        if (lowerQuery.includes('cr√©ances') || lowerQuery.includes('paiement') || lowerQuery.includes('dso')) {
            return `‚è∞ Le d√©lai moyen de paiement client atteint 47 jours (+5j vs N-1). 3 clients repr√©sentent 65% du retard : SARL Dupont (125k‚Ç¨, 73j), SAS Martin (89k‚Ç¨, 68j), EURL Blanc (45k‚Ç¨, 52j). Je sugg√®re une relance cibl√©e avec conditions pr√©f√©rentielles en cas de r√®glement rapide.`
        }

        if (lowerQuery.includes('budget') || lowerQuery.includes('pr√©vision') || lowerQuery.includes('forecast')) {
            return `üîÆ Selon vos tendances actuelles, votre budget Q4 devrait √™tre atteint √† 103%. Risques identifi√©s : inflation des co√ªts √©nerg√©tiques (+12%) et retard sur 2 gros contrats. Opportunit√©s : nouveau march√© export (+15% potentiel) et optimisation fiscale possible (√©conomie 25k‚Ç¨).`
        }

        if (lowerQuery.includes('performance') || lowerQuery.includes('kpi') || lowerQuery.includes('indicateur')) {
            return `üìà Performance globale : CA +8.5% (excellent), marge -2.3pt (attention), tr√©sorerie +12.3% (tr√®s bon). Vos KPIs sont dans la moyenne haute de votre secteur. Points d'am√©lioration prioritaires : ma√Ætrise des co√ªts et acc√©l√©ration des encaissements.`
        }

        if (lowerQuery.includes('concurrent') || lowerQuery.includes('march√©') || lowerQuery.includes('secteur')) {
            return `üèÜ Votre position concurrentielle est solide. Marges sup√©rieures au secteur (+3pt), croissance soutenue, mais DSO d√©grad√© vs concurrents. Benchmark sectoriel : CA m√©dian 850k‚Ç¨, marge 39%, DSO 42j. Vous surperformez globalement.`
        }

        if (lowerQuery.includes('risque') || lowerQuery.includes('alerte') || lowerQuery.includes('danger')) {
            return `‚ö†Ô∏è Risques d√©tect√©s : concentration client (top 3 = 67% CA), d√©pendance fournisseur unique pour 45% des achats, tr√©sorerie tendue en novembre. Actions pr√©ventives : diversification portefeuille, n√©gociation √©ch√©ancier, ligne de cr√©dit de pr√©caution.`
        }

        if (lowerQuery.includes('investissement') || lowerQuery.includes('projet') || lowerQuery.includes('expansion')) {
            return `üí° Capacit√© d'investissement estim√©e √† 180k‚Ç¨ sur 12 mois (bas√©e sur cash-flow op√©rationnel). Projets √©ligibles : digitalisation (ROI 24 mois), recrutement commercial (break-even 8 mois), extension g√©ographique (√©tude pr√©alable recommand√©e).`
        }

        return `ü§ñ Je comprends votre question sur "${query}". Pour une analyse pr√©cise, j'aurais besoin d'acc√©der aux donn√©es en temps r√©el. En attendant, consultez le tableau de bord pour les m√©triques actualis√©es ou reformulez votre question avec des termes sp√©cifiques (tr√©sorerie, marges, cr√©ances, performance, risques, etc.).`
    }

    return (
        <div className="bg-white rounded-lg shadow-lg max-w-4xl mx-auto">
            <div className="border-b border-gray-200 px-6 py-4">
                <h2 className="text-xl font-semibold text-gray-900">Copilote IA FinSight</h2>
                <p className="text-sm text-gray-600">Posez vos questions financi√®res en langage naturel</p>
            </div>

            <div className="h-96 overflow-y-auto px-6 py-4 space-y-4">
                {messages.map((message) => (
                    <div
                        key={message.id}
                        className={`flex ${message.isUser ? 'justify-end' : 'justify-start'}`}
                    >
                        <div
                            className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${message.isUser
                                ? 'bg-blue-600 text-white'
                                : 'bg-gray-100 text-gray-900'
                                }`}
                        >
                            <p className="text-sm">{message.content}</p>
                            <p className={`text-xs mt-1 ${message.isUser ? 'text-blue-100' : 'text-gray-500'
                                }`}>
                                {message.timestamp.toLocaleTimeString('fr-FR', {
                                    hour: '2-digit',
                                    minute: '2-digit'
                                })}
                            </p>
                        </div>
                    </div>
                ))}
                {isLoading && (
                    <div className="flex justify-start">
                        <div className="bg-gray-100 text-gray-900 max-w-xs lg:max-w-md px-4 py-2 rounded-lg">
                            <div className="flex space-x-1">
                                <div className="w-2 h-2 bg-gray-500 rounded-full animate-bounce"></div>
                                <div className="w-2 h-2 bg-gray-500 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                                <div className="w-2 h-2 bg-gray-500 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                            </div>
                        </div>
                    </div>
                )}
            </div>

            <div className="border-t border-gray-200 px-6 py-4">
                <div className="flex space-x-4">
                    <input
                        type="text"
                        value={input}
                        onChange={(e) => setInput(e.target.value)}
                        onKeyPress={(e) => e.key === 'Enter' && handleSend()}
                        placeholder="Ex: Quel est mon cash flow projet√© √† 90 jours ?"
                        className="flex-1 border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                        disabled={isLoading}
                    />
                    <button
                        onClick={handleSend}
                        disabled={isLoading || !input.trim()}
                        className="bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white px-6 py-2 rounded-lg font-medium"
                    >
                        Envoyer
                    </button>
                </div>
                <div className="mt-2 flex flex-wrap gap-2">
                    <button
                        onClick={() => setInput('Quel est mon d√©lai moyen de paiement client ?')}
                        className="text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-1 rounded-full"
                    >
                        D√©lais de paiement
                    </button>
                    <button
                        onClick={() => setInput('Analyse ma marge brute ce mois')}
                        className="text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-1 rounded-full"
                    >
                        Analyse marge
                    </button>
                    <button
                        onClick={() => setInput('Projection tr√©sorerie 3 mois')}
                        className="text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-1 rounded-full"
                    >
                        Projection tr√©sorerie
                    </button>
                    <button
                        onClick={() => setInput('Quels sont mes principaux risques financiers ?')}
                        className="text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-1 rounded-full"
                    >
                        Analyse risques
                    </button>
                    <button
                        onClick={() => setInput('Comment ma performance se compare au secteur ?')}
                        className="text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-1 rounded-full"
                    >
                        Benchmark secteur
                    </button>
                    <button
                        onClick={() => setInput('Quelle est ma capacit√© d\'investissement ?')}
                        className="text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-1 rounded-full"
                    >
                        Capacit√© d'investissement
                    </button>
                </div>
            </div>
        </div>
    )
}